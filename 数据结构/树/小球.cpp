#include<iostream>

using namespace std;

/**
 * 思路：从上至下计算出第I-1次经过该点的值，从而获取第I走的时候需要走哪一边
 * 对于深度为D的完全二叉树，第I次走的时候，对于根节点来说已经走了I-1次，那么走第I次时，
 * 根节点的值有两种情况：
 * true - 当I为偶数的时候
 * false - 当I为奇数的时候
 * 因此可以判断下一步的方向，因为该树为二叉树且为完全二叉树。因此当I为奇数的时候2x的节点走了I/2+1-1次，2x+1的节点走了I/2-1次，
 * 当I为偶数的时候，2x的节点和2x+1的节点都已经走了I/2-1次,由此可以判断出第I次时对应节点上的值的情况来决定下一步的方向
 * 以此来进行计算知道到达叶子节点
 */

int main()
{
    int D,I;
    cin >> D >> I;

    int node = 1;

    for (int i = 1; i < D;i++)
    {
        if(I%2 == 0)
        {
            I = I / 2;
            node = node * 2 + 1;
        }else
        {
            I = I / 2 + 1;
            node = node * 2;
        }
    }

    cout << node << endl;
}